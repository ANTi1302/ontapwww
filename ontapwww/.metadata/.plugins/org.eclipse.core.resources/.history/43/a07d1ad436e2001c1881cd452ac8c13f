package com.iuh.ontap.config;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.builders.WebSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;
import org.springframework.security.core.userdetails.User;
import org.springframework.security.core.userdetails.User.UserBuilder;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.transaction.annotation.EnableTransactionManagement;

@Configuration
@EnableWebSecurity
@EnableTransactionManagement
@ComponentScan({ "com.iuh.ontap" })
public class DemoSecurityConfig extends WebSecurityConfigurerAdapter {
	@Override
	protected void configure(AuthenticationManagerBuilder auth) throws Exception {
		UserBuilder user = User.withDefaultPasswordEncoder();
		auth.inMemoryAuthentication()
				.withUser(user.username("admin").password("123456").roles("ADMIN"))
				.withUser(user.username("user").password("123456").roles("EMPLOYEE"));
	}

	// phan quyen
	@Override
	protected void configure(HttpSecurity http) throws Exception {
//		http.authorizeRequests()
//		.antMatchers("/").hasRole("EMPLOYEE")
//		.antMatchers("/customer").hasRole("ADMIN")
//		.anyRequest().authenticated()
//		.and().formLogin()
//			.loginPage("/login")
//			.loginProcessingUrl("/dangnhap")
//			.permitAll()
//		.and().logout()
//		.permitAll()
//		.and()
//		.exceptionHandling().accessDeniedPage("/access-denied");
		http.formLogin().loginPage("/login").usernameParameter("username").passwordParameter("password");
		http.formLogin().defaultSuccessUrl("/sanpham/list").failureUrl("/login?error");
		http.logout().logoutSuccessUrl("/login");
		http.exceptionHandling().accessDeniedPage("/login?accessDenied");
		http.authorizeRequests().antMatchers("/").permitAll().antMatchers("/sanpham/**")
				.access("hasRole('ADMIN')");
		http.csrf().disable();
	}

	@Override
	public void configure(WebSecurity web) {
		web.ignoring().antMatchers("/resources/**").antMatchers("/sanpham/**");;
	}
}
